#!/usr/bin/env python

"""semplice plugin per testare il login su un server POP3."""

import os
import poplib
import socket
import sys

__version__ = '0.1 alpha'
__author__ = 'Lorenzo Cocchi <lorenzo.cocchi@softecspa.it>'

libpath = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'lib')
try:
    sys.path.insert(0, os.path.realpath(os.environ['MYLIBDIR']))
except KeyError:
    sys.path.insert(0, libpath)

import nagiosplugin

check = nagiosplugin.NagPlugin(pluginname=os.path.splitext(__file__)[0],
                               tagstatusline='POP3',
                               description='check POP3',
                               version='0.1 alpha')

check.add_cmdlineoption('-H', '--hostname', 'host', 'Hostname', required=True)
check.add_cmdlineoption('-P', '--port', 'port',
                        'port to connect', type=int)
check.add_cmdlineoption('-u', '--username', 'username', 'Username',
                        required=True)
check.add_cmdlineoption('-p', '--password', 'password', 'Password',
                        required=True)
check.add_cmdlineoption('-t', '--timeout', 'timeout',
                        'Timeout, default 10s', default=10, type=int)
check.add_cmdlineoption('-s', '--use-ssl', 'use_ssl',
                        'Connects to the server over an SSL encrypted socket',
                        action='store_true')
check.add_cmdlineoption('-D', '--debug', 'debug',
                        'Debug level, from 0 to 2, default 0',
                        default=0, type=int)

check.parse_cmdlineoptions()

if check.options.debug < 0 or check.options.debug > 2:
    check.parse_error('Debug level must to be: from 0 to 2')

(host,
 port,
 username,
 password,
 timeout,
 debug,
 use_ssl) = (check.options.host,
             check.options.port,
             check.options.username,
             check.options.password,
             check.options.timeout,
             check.options.debug,
             check.options.use_ssl)

(OK, WARNING, CRITICAL, UNKNOWN) = range(0, 4)

if port:
    if use_ssl:
        POP3_SSL_PORT = port
    else:
        POP3_PORT = port

check.verbose(
    1, 'login to \'%s\', ssl=%s, timeout=%ss' % (host, use_ssl, timeout)
)

try:
    if use_ssl:
        # TODO: POP3_SSL non include il parametro timeout
        pop3 = poplib.POP3_SSL(host=host)
    else:
        pop3 = poplib.POP3(host=host, timeout=timeout)
    check.verbose(1, '%s' % ''.join(pop3.getwelcome()))
    pop3.set_debuglevel(debug)
    pop3.user(username)
    pop3.pass_(password)
except poplib.error_proto as e:
    check.ret2nagios(CRITICAL, ('POP3 %s' % e))
except socket.timeout as e:
    check.ret2nagios(CRITICAL, ('socket %s' % e))
except socket.error as e:
    check.ret2nagios(CRITICAL, ('socket %s' % e))

try:
    check.ret2nagios(OK, ('%s' % pop3.list()[0]))
except poplib.error_proto as e:
    check.ret2nagios(CRITICAL, ('%s' % e))
finally:
    pop3.quit()

check.ret2nagios(UNKNOWN, ('Unknown status'))
